services:
  rqscheduler:
    build:
      context: .
      dockerfile: dockerfile
    command: python manage.py rqscheduler
    environment:
      ENV: production
      REDIS_URL: redis://redis:6379
    env_file: .env.prod
    depends_on:
      - redis
      - db
  db:
    image: postgres:15-alpine
    restart: always
    env_file: .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --timeout 0

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8002 --workers 3
    environment:
      ENV: production
      REDIS_URL: redis://redis:6379
    env_file: .env.prod
    ports:
      - "8002:8002"
    depends_on:
      - db
      - redis
    volumes:
      - ./static:/app/static
      - ./media:/app/media

  rqworker:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py rqworker default low high
    environment:
      ENV: production
      REDIS_URL: redis://redis:6379
    env_file: .env.prod
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
